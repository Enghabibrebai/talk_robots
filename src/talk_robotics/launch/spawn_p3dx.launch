<?xml version="1.0"?>

<launch>

  <arg name="x" default="0.0"/>
  <arg name="y" default="1.5"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>


  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find talk_robotics)/urdf/pioneer3dx.xacro' --inorder" />


  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find talk_robotics)/config/control_p3dx.yaml"/>
  <rosparam param="RosAria/base_frame_id" subst_value="True">p3dx/base_link</rosparam>
  <rosparam param="RosAria/odom_frame_id" subst_value="True">p3dx/odom</rosparam>
  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
      args="p3dx_joint_publisher RosAria" />

  <!-- Start EKF for localization (if needed) -->
  <!--<node pkg="robot_localization" type="ekf_localization_node" name="p3dx_ekf_localization">
  <rosparam command="load" file="$(find talk_robotics)/config/localization.yaml" subst_value="True"/>
  </node>-->
  
 

  <node name="p3dx_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    
    </node>
  <node name="p3dx_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />


  <!-- Spawn robot in Gazebo -->
  <node name="spawn_p3dx_model" pkg="gazebo_ros" type="spawn_model"
      args="-x $(arg x)
            -y $(arg y)
            -z $(arg z)
            -Y $(arg yaw)
            -urdf
            -param robot_description
            -model pioneer3dx" />

</launch>
