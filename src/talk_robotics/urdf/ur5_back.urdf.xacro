<?xml version="1.0"?>
<robot name="ridgeback_arm" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="PI" value="3.1415926535897931" />

  <xacro:property name="wheel_radius" value="0.0759" />
  <xacro:property name="wheel_width" value="0.0790" />

  <xacro:property name="chassis_length" value="0.960" />
  <xacro:property name="chassis_width" value="0.793" />
  <xacro:property name="chassis_height" value="0.216" />
  <xacro:property name="deck_height" value="0.280" />

  <xacro:property name="axle_offset" value="0.0500" />
  <xacro:property name="rocker_offset" value="0.319" />
  <xacro:property name="rocker_width" value="0.472" />

  <xacro:property name="imu_offset_x" value="0.2085" />
  <xacro:property name="imu_offset_y" value="-0.2902" />
  <xacro:property name="imu_offset_z" value="0.1681" />

  <xacro:property name="dummy_inertia" value="1e-09"/>
  
  <!-- passing the namespace and tf prefix for gazebo elements -->
  <xacro:arg name="robot_ns" default="talk00" />
  <xacro:arg name="tf_prefix" default="$(arg robot_ns)_tf" />

  <material name="dark_grey"><color rgba="0.2 0.2 0.2 1.0" /></material>
  <material name="light_grey"><color rgba="0.4 0.4 0.4 1.0" /></material>
  <material name="red"><color rgba="0.8 0.0 0.0 1.0" /></material>
  <material name="white"><color rgba="0.9 0.9 0.9 1.0" /></material>
  <material name="yellow"><color rgba="0.8 0.8 0.0 1.0" /></material>
  <material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>

  <xacro:macro name="wheel" params="prefix side *joint_pose">
    <link name="$(arg tf_prefix)/${prefix}_${side}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <mesh filename="package://ridgeback_description/meshes/wheel.stl"/>
        </geometry>
        <material name="black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="2.3"/>
        <inertia
          ixx="3.3212e-3" ixy="0" ixz="0"
          iyy="6.6424e-3" iyz="0"
          izz="3.3212e-3"/>
      </inertial>
    </link>

    <joint name="${prefix}_${side}_wheel" type="continuous">
      <parent link="$(arg tf_prefix)/${prefix}_rocker_link"/>
      <child link="$(arg tf_prefix)/${prefix}_${side}_wheel_link" />
      <xacro:insert_block name="joint_pose" />
      <axis xyz="0 1 0" />
    </joint>

    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${side}_wheel">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${side}_actuator">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>


  <xacro:macro name="rocker" params="prefix joint_type location *joint_limits">
    <link name="$(arg tf_prefix)/${prefix}_rocker_link">
      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2}" />
        <geometry>
          <mesh filename="package://ridgeback_description/meshes/rocker.stl"/>
        </geometry>
        <material name="black" />
      </visual>
      <inertial>
        <origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2}"/>
        <mass value="10.267"/>
        <inertia
          ixx="0.0288" ixy="2.20484e-6" ixz="-1.3145e-5"
          iyy="0.4324" iyz="1.8944e-3"
          izz="0.4130"/>
      </inertial>
    </link>

    <joint name="${prefix}_rocker" type="${joint_type}">
      <parent link="$(arg tf_prefix)/axle_link"/>
      <child link="$(arg tf_prefix)/${prefix}_rocker_link" />
      <origin xyz="${location*rocker_offset} 0 0" rpy="0 0 0" />
      <axis xyz="1 0 0" />
      <xacro:insert_block name="joint_limits" />
    </joint>

    <xacro:wheel prefix="${prefix}" side="left">
      <origin xyz="0 ${rocker_width/2 + wheel_width/2} 0" rpy="0 0 0" />
    </xacro:wheel>
    <xacro:wheel prefix="${prefix}" side="right">
      <origin xyz="0 ${-(rocker_width/2 + wheel_width/2)} 0" rpy="0 0 0" />
    </xacro:wheel>
  </xacro:macro>

  <xacro:rocker prefix="front" joint_type="revolute" location="1" >
    <limit lower="-0.08726" upper="0.08726" effort="0" velocity="0" />
  </xacro:rocker>

  <xacro:rocker prefix="rear" joint_type="fixed" location="-1" >
    <limit effort="0" velocity="0" />
  </xacro:rocker>

  <link name="$(arg tf_prefix)/base_link"></link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/base_link"/>
    <child link="$(arg tf_prefix)/chassis_link" />
  </joint>

  <link name="$(arg tf_prefix)/chassis_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/body.stl"/>
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/body-collision.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.012 0.002 0.067" rpy="${PI/2} 0 ${PI/2}"/>
      <mass value="165.304"/>
      <inertia
        ixx="4.4744" ixy="0.03098" ixz="0.003647"
        iyy="7.1624" iyz="0.1228"
        izz="4.6155"/>
    </inertial>
  </link>

  <joint name="right_side_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/right_side_cover_link" />
  </joint>
  <joint name="left_side_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/left_side_cover_link" />
  </joint>

  <link name="$(arg tf_prefix)/left_side_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/side-cover.stl"/>
      </geometry>
      <material name="yellow" />
    </visual>
  </link>
  <link name="$(arg tf_prefix)/right_side_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/side-cover.stl"/>
      </geometry>
      <material name="yellow" />
    </visual>
  </link>

  <joint name="front_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/front_cover_link" />
  </joint>

  <link name="$(arg tf_prefix)/front_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/end-cover.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <joint name="rear_cover_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/rear_cover_link" />
  </joint>

  <link name="$(arg tf_prefix)/rear_cover_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/end-cover.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <joint name="front_lights_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/front_lights_link" />
  </joint>
  <joint name="rear_lights_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/rear_lights_link" />
  </joint>

  <link name="$(arg tf_prefix)/front_lights_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/lights.stl" />
      </geometry>
      <material name="white" />
    </visual>
  </link>
  <link name="$(arg tf_prefix)/rear_lights_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/lights.stl" />
      </geometry>
      <material name="red" />
    </visual>
  </link>

  <joint name="top_link_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/top_link" />
  </joint>

  <link name="$(arg tf_prefix)/top_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/top.stl" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/top.stl"/>
      </geometry>
    </collision>
  </link>

  <joint name="axle_joint" type="fixed">
    <origin xyz="0 0 ${axle_offset}" rpy="0 0 0" />
    <parent link="$(arg tf_prefix)/chassis_link"/>
    <child link="$(arg tf_prefix)/axle_link" />
  </joint>

  <link name="$(arg tf_prefix)/axle_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 ${PI/2} 0" />
      <geometry>
        <mesh filename="package://ridgeback_description/meshes/axle.stl" />
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <link name="$(arg tf_prefix)/imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="$(arg tf_prefix)/chassis_link" />
    <child link="$(arg tf_prefix)/imu_link" />
    <origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
  </joint>

  <link name="$(arg tf_prefix)/mid_mount" />
  <joint name="mid_mount_joint" type="fixed">
    <parent link="$(arg tf_prefix)/base_link" />
    <child link="$(arg tf_prefix)/mid_mount" />
    <origin xyz="0 0 ${deck_height}" rpy="0 0 0"/>
  </joint>

 
  <xacro:include filename="$(find talk_robotics)/urdf/accessories.urdf.xacro" />

  <!-- Optional custom includes-->
  <xacro:include filename="$(optenv RIDGEBACK_URDF_EXTRAS empty.urdf)" />

  <!--ARM_ROBOT-->
  <!--Universal Robot UR5-->

  <xacro:include filename="$(find talk_robotics)/urdf/eef.xacro"/>
  <xacro:include filename="$(find talk_robotics)/urdf/_d435.urdf.xacro" />

    <!-- Constants -->
    <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>
    <xacro:property name="M_SCALE" value="0.001 0.001 0.001"/> 
    <xacro:property name="M_PI" value="3.14159"/>
    
    <transmission name="shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_pan_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_lift_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="elbow_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_1_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_2_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_3_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <!--links:main serial chain-->
    <link name="$(arg tf_prefix)/base_link_ur" />
    <link name="$(arg tf_prefix)/base_link_inertia">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/base.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/base.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="4.0" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0" izz="0.0072" />
        </inertial>
    </link>

    


    <link name="$(arg tf_prefix)/shoulder_link">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/shoulder.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/shoulder.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="3.7" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.014972352344389999" ixy="0.0" ixz="0.0" iyy="0.014972352344389999" iyz="0.0" izz="0.01040625" />
        </inertial>
    </link>
    <link name="$(arg tf_prefix)/upper_arm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/upperarm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/upperarm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="8.393" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.2125 0.0 0.136" />
            <inertia ixx="0.1338857818623325" ixy="0.0" ixz="0.0" iyy="0.1338857818623325" iyz="0.0" izz="0.0151074" />
        </inertial>
    </link>
    <link name="$(arg tf_prefix)/forearm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/forearm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/forearm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="2.275" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.196125 0.0 0.0165" />
            <inertia ixx="0.03121679102890359" ixy="0.0" ixz="0.0" iyy="0.03121679102890359" iyz="0.0" izz="0.004095" />
        </inertial>
    </link>
    <link name="$(arg tf_prefix)/wrist_1_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist1.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist1.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0020138887777775" ixy="0.0" ixz="0.0" iyy="0.0020138887777775" iyz="0.0" izz="0.0021942" />
        </inertial>
    </link>
    <link name="$(arg tf_prefix)/wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.095" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist2.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.095" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist2.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.219" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0018310388509175" ixy="0.0" ixz="0.0" iyy="0.0018310388509175" iyz="0.0" izz="0.0021942" />
        </inertial>
    </link>
    <link name="$(arg tf_prefix)/wrist_3_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/visual/wrist3.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur5/collision/wrist3.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1879" />
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.01525" />
            <inertia ixx="8.062472608343e-05" ixy="0.0" ixz="0.0" iyy="8.062472608343e-05" iyz="0.0" izz="0.0001321171875" />
        </inertial>
    </link>
    <!-- joints:main serial chain -->
    <joint name="base_link_ur_base_link_inertia" type="fixed">
        <parent link="$(arg tf_prefix)/base_link_ur" />
        <child link="$(arg tf_prefix)/base_link_inertia" />
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <joint name="shoulder_pan_joint" type="revolute">
        <parent link="$(arg tf_prefix)/base_link_inertia" />
        <child link="$(arg tf_prefix)/shoulder_link" />
        <origin rpy="0 0 0" xyz="0 0 0.089159" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="shoulder_lift_joint" type="revolute">
        <parent link="$(arg tf_prefix)/shoulder_link" />
        <child link="$(arg tf_prefix)/upper_arm_link" />
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="elbow_joint" type="revolute">
        <parent link="$(arg tf_prefix)/upper_arm_link" />
        <child link="$(arg tf_prefix)/forearm_link" />
        <origin rpy="0 0 0" xyz="-0.425 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_1_joint" type="revolute">
        <parent link="$(arg tf_prefix)/forearm_link" />
        <child link="$(arg tf_prefix)/wrist_1_link" />
        <origin rpy="0 0 0" xyz="-0.39225 0 0.10915" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_2_joint" type="revolute">
        <parent link="$(arg tf_prefix)/wrist_1_link" />
        <child link="$(arg tf_prefix)/wrist_2_link" />
        <origin rpy="1.570796327 0 0" xyz="0 -0.09465 -1.941303950897609e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_3_joint" type="revolute">
        <parent link="$(arg tf_prefix)/wrist_2_link" />
        <child link="$(arg tf_prefix)/wrist_3_link" />
        <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0823 -1.688001216681175e-11" />
        <axis xyz="0 0 1" />
        <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <!-- ROS-Industrial 'base' frame:base_link to UR 'Base' Coordinates transform -->
    <link name="$(arg tf_prefix)/base" />
    <joint name="base_link-base_fixed_joint" type="fixed">
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
        <parent link="$(arg tf_prefix)/base_link_ur" />
        <child link="$(arg tf_prefix)/base" />
    </joint>
    <!-- ROS-Industrial 'flange' frame:attachment point for EEF models -->
    <link name="$(arg tf_prefix)/flange" />
    <joint name="wrist_3-flange" type="fixed">
        <parent link="$(arg tf_prefix)/wrist_3_link" />
        <child link="$(arg tf_prefix)/flange" />
        <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0" />
    </joint>
    <!-- ROS-Industrial 'tool0' frame:all-zeros tool frame -->
    <link name="$(arg tf_prefix)/tool0" />
    <joint name="flange-tool0" type="fixed">
        <!-- default toolframe:X+ left, Y+ up, Z+ front -->
        <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0" />
        <parent link="$(arg tf_prefix)/flange" />
        <child link="$(arg tf_prefix)/tool0" />
    </joint>

    <!-- Define RGB-D sensor -->  

    <xacro:sensor_d435 name="d435i" topics_ns="$(arg robot_ns)/d435i" parent="$(arg tf_prefix)/wrist_3_link" publish_pointcloud="true">
        <origin xyz="0.0 0.2 0.0" rpy="${90.0 * deg_to_rad} ${-90.0 * deg_to_rad} ${180.0 * deg_to_rad}" />
    </xacro:sensor_d435>  
 
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>$(arg robot_ns)</robotNamespace>
        <legacyModeNS>true</legacyModeNS>
      </plugin>
  
      <plugin name="ridgeback_ros_force_based_move" filename="libridgeback_ros_force_based_move.so">
        <robotNamespace>$(arg robot_ns)</robotNamespace>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>$(arg tf_prefix)/odom</odometryFrame>
        <odometryRate>25.0</odometryRate>
        <robotBaseFrame>$(arg tf_prefix)/base_link</robotBaseFrame>
        <cmdVelTimeOut>0.25</cmdVelTimeOut>
        <!-- Don't publish a transform:the controller does it. -->
        <publishOdometryTf>0</publishOdometryTf>
        <yaw_velocity_p_gain>500.0</yaw_velocity_p_gain>
        <x_velocity_p_gain>10000.0</x_velocity_p_gain>
        <y_velocity_p_gain>10000.0</y_velocity_p_gain>
      </plugin>
  
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>$(arg robot_ns)</robotNamespace>
        <updateRate>50.0</updateRate>
        <bodyName>$(arg tf_prefix)/imu_link</bodyName>
        <topicName>imu/data</topicName>
        <frameId>$(arg tf_prefix)/base_link</frameId>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.00005 0.00005 0.00005</rateDrift>
        <rateGaussianNoise>0.00005 0.00005 0.00005</rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
  
      <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <jointName>front_rocker</jointName>
        <robotNamespace>/$(arg robot_ns)</robotNamespace>
        <updateRate>50.0</updateRate>
      </plugin>
    </gazebo>
  
   
    <gazebo reference="$(arg tf_prefix)/base_link">
      <material>Gazebo/DarkGrey</material>
      <gravity>true</gravity>
    </gazebo>
  
    <!-- Individual link colouring still needed in Gazebo 2.x -->
    <gazebo reference="$(arg tf_prefix)/chassis_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/top_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/left_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/right_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/front_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/rear_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/front_lights_link"><material>Gazebo/White</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/rear_lights_link"><material>Gazebo/Red</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/front_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/rear_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="$(arg tf_prefix)/axle_link"><material>Gazebo/DarkGrey</material></gazebo>
  
    <!-- Wheel friction to zero, as movement is handled by applying forces at
         the body level. -->
    <gazebo reference="$(arg tf_prefix)/front_left_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  
    <gazebo reference="$(arg tf_prefix)/front_right_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  
    <gazebo reference="$(arg tf_prefix)/rear_left_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  
    <gazebo reference="$(arg tf_prefix)/rear_right_wheel_link">
      <material>Gazebo/DarkGrey</material>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  
    <!-- Fix the cobot to the ridgeback-->
    <link name="$(arg tf_prefix)/mount_link">
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0.002789"  ixy="0"  ixz="0" iyy="0.002789" iyz="0" izz="0.00551" />
        </inertial>
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <cylinder radius="0.105" length="0.0198"/>
          </geometry>
          <material name="white">
            <color rgba="1.0 1.0 1.0 1.0"/>
          </material>
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <cylinder radius="0.105" length="0.0198"/>
          </geometry>
        </collision>
      </link>
    
      <joint name="mount_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.205 0.0 0.280"/>
        <parent link="$(arg tf_prefix)/base_link"/>
        <child link="$(arg tf_prefix)/mount_link"/>
      </joint>
      <joint name="ur5_base_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.0 0.0 0.0099"/>
        <parent link="$(arg tf_prefix)/mount_link"/>
        <child link="$(arg tf_prefix)/base_link_ur"/>
      </joint>
</robot>