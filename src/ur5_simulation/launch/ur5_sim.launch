<?xml version="1.0"?>

<launch>

    <!-- Associate to the robot description parameter, the urdf file that model the robot-->
    <param name="robot_description" command = "$(find xacro)/xacro --inorder $(find ur_description)/urdf/ur5_robotiq85_gripper.urdf.xacro" />
    
    
    <!-- Set teh position in empty world-->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0.8" />
    <arg name="yaw" default="-1.57" />
    <arg name="teach" default="false"/>
    <arg name="initial_joint_states" 
         default=" 
                    -J ur5::shoulder_lift_joint -1.547
                    -J ur5::elbow_joint 1.57
                    -J ur5::wrist_2_joint 1.57"/>
    
    <!-- put world file as argument-->
    <!--<arg name="world_file" default = "$(find cobot_sim)/worlds/pick_place_scene.world" />-->

    <!-- Launch Gezabo world in paused-->
    <include file = "$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="true"/>
        <arg name="paused" value="true" />
        <!--<arg name="world_name" value="$(arg world_file)"/>-->
    </include>   

    <!-- Spawn the robot using the package gazebo_ros-->
    <node name="spawn_the_robot" pkg="gazebo_ros" type="spawn_model"  output="screen" args="-urdf -param robot_description -model ur5 -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw) $(arg initial_joint_states)" />
    

    <!-- Load the controllers-->

    <rosparam command="load" file="$(find ur5_simulation)/config/ur5_gripper_controllers.yaml"/>


     <!-- Load the node controller manager-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"  
            output="screen" respawn="false" 
            args="joint_state_controller
                ur5_arm_controller
                gripper_controller
                --timeout 60 ">        
    </node>

    <!-- Convert joint states to TF transform for rviz and rqt-->
    <node name="ur5_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  
            output="screen" respawn="false">
    </node>

    <node name="ur5_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
    <!--<node name="object_tracking" pkg="ur5_simulation" type="object_tracking" />-->
    <!--<node name="ur5_vision" pkg="ur5_simulation" type="ur5_vision.py" />-->
    <node name="get_position_server" pkg="ur5_simulation" type="get_position_server.py" />

   <include file="$(find ur5_simulation)/launch/conveyor.launch"/> 
   <!--<include file="$(find ur5_simulation)/launch/fin_object_3d.launch"/>-->

   
<!-- spawn the red_box in gazebo -->
<node name="spawn_red_box" pkg="gazebo_ros" type="spawn_model" args="-file $(find ur5_simulation)/urdf/green_box.urdf -urdf -model green_box -y -1 -z 2"/>
    
    <include file= "$(find ur5_gripper_moveit_config)/launch/planning_context.launch" >
        <arg name="load_robot_description" value="true" />
    </include>

    <include file= "$(find ur5_gripper_moveit_config)/launch/move_group.launch" >
        <arg name="publish_monitored_planning_scene" value="true" />
    </include>

    <include file= "$(find ur5_gripper_moveit_config)/launch/moveit_rviz.launch" >
        <arg name="rviz_config" value="$(find ur5_gripper_moveit_config)/launch/moveit.rviz" />
    </include>


    
</launch>